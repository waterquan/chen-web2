<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.chen.entity.UserMapper">
    <resultMap id="BaseResultMap" type="com.chen.entity.User">
        <id column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
        <result column="user_password" property="userPassword" jdbcType="VARCHAR"/>
        <result column="user_mail" property="userMail" jdbcType="VARCHAR"/>
        <result column="user_phone" property="userPhone" jdbcType="BIGINT"/>
        <result column="user_address" property="userAddress" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">user_id, user_name, user_password, user_mail, user_phone, user_address
    </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long">
        select
        <include refid="Base_Column_List"/>
        from chen_user
        where user_id = #{userId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from chen_user
        where user_id = #{userId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" parameterType="com.chen.entity.User">
        insert into chen_user (user_id, user_name, user_password,
        user_mail, user_phone, user_address
        )
        values (#{userId,jdbcType=BIGINT}, #{userName,jdbcType=VARCHAR}, #{userPassword,jdbcType=VARCHAR},
        #{userMail,jdbcType=VARCHAR}, #{userPhone,jdbcType=BIGINT}, #{userAddress,jdbcType=VARCHAR}
        )
    </insert>
    <insert id="insertSelective" parameterType="com.chen.entity.User">
        insert into chen_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                user_id,
            </if>
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPassword != null">
                user_password,
            </if>
            <if test="userMail != null">
                user_mail,
            </if>
            <if test="userPhone != null">
                user_phone,
            </if>
            <if test="userAddress != null">
                user_address,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">
                #{userId,jdbcType=BIGINT},
            </if>
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userMail != null">
                #{userMail,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                #{userPhone,jdbcType=BIGINT},
            </if>
            <if test="userAddress != null">
                #{userAddress,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.chen.entity.User">
        update chen_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPassword != null">
                user_password = #{userPassword,jdbcType=VARCHAR},
            </if>
            <if test="userMail != null">
                user_mail = #{userMail,jdbcType=VARCHAR},
            </if>
            <if test="userPhone != null">
                user_phone = #{userPhone,jdbcType=BIGINT},
            </if>
            <if test="userAddress != null">
                user_address = #{userAddress,jdbcType=VARCHAR},
            </if>
        </set>
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.chen.entity.User">
        update chen_user
        set user_name = #{userName,jdbcType=VARCHAR},
        user_password = #{userPassword,jdbcType=VARCHAR},
        user_mail = #{userMail,jdbcType=VARCHAR},
        user_phone = #{userPhone,jdbcType=BIGINT},
        user_address = #{userAddress,jdbcType=VARCHAR}
        where user_id = #{userId,jdbcType=BIGINT}
    </update>
</mapper>